# bossphorus Continuous Integration.
# Uses [workflows](https://circleci.com/docs/2.0/workflows/)

version: 2
jobs:
    lint_bossphorus:
        docker:
            - image: circleci/python:3.7.1
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "bossphorus/requirements.txt" }}
            - run:
                name: Lint bossphorus
                command: |
                    . venv/bin/activate
                    python3 -m pylint bossphorus
    build_bossphorus:
        docker:
            - image: circleci/python:3.7.1
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "bossphorus/requirements.txt" }}
            - run:
                name: Install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r bossphorus/requirements.txt
            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "bossphorus/requirements.txt" }}
                paths:
                    - "venv"
    test_bossphorus:
        docker:
            - image: circleci/python:3.7.1
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "bossphorus/requirements.txt" }}
            - run:
                name: Test bossphorus (pytest)
                command: |
                    . venv/bin/activate
                    python3 -m pytest bossphorus
    lint_marmara:
        docker:
            - image: circleci/python:3.7.1
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "marmara/requirements.txt" }}
            - run:
                name: Lint marmara
                command: |
                    . venv/bin/activate
                    python3 -m pylint marmara
    build_marmara:
        docker:
            - image: circleci/python:3.7.1
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "marmara/requirements.txt" }}
            - run:
                name: Install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r marmara/requirements.txt
            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "marmara/requirements.txt" }}
                paths:
                    - "venv"
    test_marmara:
        docker:
            - image: circleci/python:3.7.1
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "marmara/requirements.txt" }}
            - run:
                name: Test marmara (pytest)
                command: |
                    . venv/bin/activate
                    python3 -m pytest marmara
workflows:
    version: 2
    test_all:
        jobs:
            - build_bossphorus
            - lint_bossphorus:
                requires:
                    - build_bossphorus
            - test_bossphorus:
                requires:
                    - build_bossphorus
            - build_marmara
            - lint_marmara:
                requires:
                    - build_marmara
            - test_marmara:
                requires:
                    - build_marmara
            - collect_artifacts:
                requires:
                    - build_bossphorus
                    - lint_bossphorus
                    - build_marmara
                    - lint_marmara
